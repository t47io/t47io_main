@mixin transition($val) {
  transition: all $val ease-in-out;   
}
@mixin transform($val) {
  -webkit-transform: $val;
  -ms-transform: $val;
  transform: $val;
}

@mixin flex {
  display: -webkit-flex;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@mixin flex_direction($val) {
  -webkit-flex-direction: $val;
  flex-direction: $val;
}

@mixin filter($val) {
  -webkit-filter: $val;
  filter: $val;  
}

@mixin retina_image($url) {
  $len: str-length($url);
  $path: str-slice($url, 0, $len - 4);
  $ext: str-slice($url, $len - 2);

  background-image: url("#{$path}.#{$ext}");
  /* @include filter(blur(5px)); */
  @include transition(1s);

  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
    background-image: url("#{$path}@1.5x.#{$ext}"); 
    /* @include filter(none); */
  }
  @media only screen and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
    background-image: url("#{$path}@2x.#{$ext}"); 
    /* @include filter(none); */
  }
  @media only screen and (-webkit-min-device-pixel-ratio: 3), (min-resolution: 3dppx) {
    background-image: url("#{$path}@3x.#{$ext}"); 
    /* @include filter(none); */
  }
}

@mixin animation($val, $time, $ease, $loop) {
  -webkit-animation: $val $time $ease $loop;
  animation: $val $time $ease $loop;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
